var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SatelliteDataSources","category":"page"},{"location":"#SatelliteDataSources","page":"Home","title":"SatelliteDataSources","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"SatelliteDataSources is a pure Julia package built on top of Rasters.jl for reading and manipulating satellite imagery. Each  AbstractSatellite provides a set of layers that can be conveniently read into either a Raster or RasterStack. Additionally, all AbstractSatellite types define a collection of sensor-specific information, such as digital number encoding, band wavelength, and band color.","category":"page"},{"location":"#Supported-Sensors","page":"Home","title":"Supported Sensors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Several popular satellites are already supported, and we provide a simple interface for adding more down the line.","category":"page"},{"location":"","page":"Home","title":"Home","text":"AbstractSatellite\nLandsat7\nLandsat8\nLandsat9\nSentinel2","category":"page"},{"location":"#SatelliteDataSources.AbstractSatellite","page":"Home","title":"SatelliteDataSources.AbstractSatellite","text":"The super-type of all satellites. \n\nSub-types must implement the AbstractSatellite interface.\n\n\n\n\n\n","category":"type"},{"location":"#SatelliteDataSources.Landsat7","page":"Home","title":"SatelliteDataSources.Landsat7","text":"Implements the AbstractSatellite interface for Landsat 7.\n\nSupported Bands: :B1, :B2, :B3, :B4, :B5, :B7, :thermal, :panchromatic\n\nSupported Colors: :blue, :green, :red, :nir, :swir1, :swir2\n\nSupported Masks: :dilated_clouds, :clouds, :cloud_shadow, :snow, :water\n\n\n\n\n\n","category":"type"},{"location":"#SatelliteDataSources.Landsat8","page":"Home","title":"SatelliteDataSources.Landsat8","text":"Implements the AbstractSatellite interface for Landsat 8.\n\nSupported Bands: :B1, :B2, :B3, :B4, :B5, :B6, :B7, :thermal1, :thermal2, :panchromatic\n\nSupported Colors: :blue, :green, :red, :nir, :swir1, :swir2\n\nSupported Masks: :dilated_clouds, :clouds, :cloud_shadow, :snow, :water\n\n\n\n\n\n","category":"type"},{"location":"#SatelliteDataSources.Landsat9","page":"Home","title":"SatelliteDataSources.Landsat9","text":"Implements the AbstractSatellite interface for Landsat 9.\n\nSupported Layers: :B1, :B2, :B3, :B4, :B5, :B6, :B7, :thermal1, :thermal2, :panchromatic\n\nSupported Colors: :blue, :green, :red, :nir, :swir1, :swir2\n\nSupported Masks: :dilated_clouds, :clouds, :cloud_shadow, :snow, :water\n\n\n\n\n\n","category":"type"},{"location":"#SatelliteDataSources.Sentinel2","page":"Home","title":"SatelliteDataSources.Sentinel2","text":"Implements the AbstractSatellite interface for Sentinel 2.\n\nThe user must specify a resolution of 10, 20, or 60 meters.\n\nSupported Bands (10m): :B02, :B03, :B04, :B08\n\nSupported Bands (20m): :B02, :B03, :B04, :B05, :B06, :B07, :B8A, :B11, :B12\n\nSupported Bands (60m): :B01, :B02, :B03, :B04, :B05, :B06, :B07, :B8A, :B09, :B11, :B12\n\nSupported Colors (10m): :blue, :green, :red, :nir  \n\nSupported Colors (20m and 60m): :blue, :green, :red, :nir, :swir1, :swir2  \n\nSupported Masks (20m and 60m): :cloud_shadow, :clouds_med, :clouds_high, :cirrus, :vegetation, :soil, :water, :snow  \n\n\n\n\n\n","category":"type"},{"location":"#User-Interface","page":"Home","title":"User Interface","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"files\nbands\nlayers\nwavelengths\nwavelength\nblue_band\ngreen_band\nred_band\nnir_band\nswir1_band\nswir2_band\ndn_scale\ndn_offset\ndecode\nencode\nmetadata\nRasters.Raster\nRasters.RasterStack","category":"page"},{"location":"#SatelliteDataSources.files","page":"Home","title":"SatelliteDataSources.files","text":"files(x::AbstractSatellite)\n\nReturn a list of files for the given satellite product.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.bands","page":"Home","title":"SatelliteDataSources.bands","text":"bands(::Type{AbstractSatellite})\n\nReturn the band names in order from shortest to longest wavelength.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.layers","page":"Home","title":"SatelliteDataSources.layers","text":"layers(::Type{AbstractSatellite})\n\nReturn the names of all layers available for the given sensor.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.wavelengths","page":"Home","title":"SatelliteDataSources.wavelengths","text":"wavelengths(::Type{AbstractSatellite})\n\nReturn the central wavelengths for all bands in order from shortest to longest.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.wavelength","page":"Home","title":"SatelliteDataSources.wavelength","text":"wavelength(::Type{AbstractSatellite}, band::Symbol)\n\nReturn the central wavelength for the corresponding band.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.blue_band","page":"Home","title":"SatelliteDataSources.blue_band","text":"blue_band(::Type{AbstractSatellite})\n\nReturn the blue band for the given sensor.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.green_band","page":"Home","title":"SatelliteDataSources.green_band","text":"green_band(::Type{AbstractSatellite})\n\nReturn the green band for the given sensor.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.red_band","page":"Home","title":"SatelliteDataSources.red_band","text":"red_band(::Type{AbstractSatellite})\n\nReturn the red band for the given sensor.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.nir_band","page":"Home","title":"SatelliteDataSources.nir_band","text":"nir_band(::Type{AbstractSatellite})\n\nReturn the nir band for the given sensor.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.swir1_band","page":"Home","title":"SatelliteDataSources.swir1_band","text":"swir1_band(::Type{AbstractSatellite})\n\nReturn the swir1 band for the given sensor.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.swir2_band","page":"Home","title":"SatelliteDataSources.swir2_band","text":"swir2_band(::Type{AbstractSatellite})\n\nReturn the swir2 band for the given sensor.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.dn_scale","page":"Home","title":"SatelliteDataSources.dn_scale","text":"dn_scale(::Type{AbstractSatellite}, layer::Symbol)\n\nReturn the scale factor applied to digital numbers.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.dn_offset","page":"Home","title":"SatelliteDataSources.dn_offset","text":"dn_offset(::Type{AbstractSatellite}, layer::Symbol)\n\nReturn the offset factor applied to digital numbers.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.decode","page":"Home","title":"SatelliteDataSources.decode","text":"decode(s::Type{AbstractSatellite}, raster::Rasters.AbstractRaster)\ndecode(s::Type{AbstractSatellite}, raster::Rasters.AbstractRasterStack)\n\nDecode the Digital Number (DN) values in the given raster(s). Typically, the decoded values will be in either reflectance (visual bands) or Kelvin (thermal bands).\n\nParameters\n\ns: The AbstractSatellite that produced the raster(s) in question.\nraster: Either a Rasters.Raster or Rasters.RasterStack to be decoded.\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.encode","page":"Home","title":"SatelliteDataSources.encode","text":"encode(s::Type{AbstractSatellite}, raster::Rasters.AbstractRaster; encoding_type=UInt16, missingval=0x0000)\nencode(s::Type{AbstractSatellite}, raster::Rasters.AbstractRasterStack; kwargs...)\n\nEncode the provided raster(s) to Digital Numbers (DN).\n\nParameters\n\ns: The AbstractSatellite that produced the raster(s) in question.\nraster: Either a Rasters.Raster or Rasters.RasterStack to be encoded.\nencoding_type: The Julia type to use for storing the encoded values (default = UInt16).\nmissingval: The value to denote missing values (default = 0x0000).\n\n\n\n\n\n","category":"function"},{"location":"#SatelliteDataSources.metadata","page":"Home","title":"SatelliteDataSources.metadata","text":"metadata(x::AbstractSatellite)\n\nParses the metadata fields for the given satellite scene.\n\nMetadata varies between products, but typically includes the acquisition date and processing level.\n\n\n\n\n\n","category":"function"},{"location":"#Rasters.Raster","page":"Home","title":"Rasters.Raster","text":"Raster(x::AbstractSatellite, layer::Symbol; kwargs...)\n\nRead a single layer into a Rasters.Raster.\n\nParameters\n\nx: An AbstractSatellite from which to read a layer.\nlayer: The layer to be read. See layers(s) for a list of available layers for sensor s.\nkwargs: Refer to the Rasters.Raster documentation for a summary of supported keywords.\n\n\n\n\n\n","category":"type"},{"location":"#Rasters.RasterStack","page":"Home","title":"Rasters.RasterStack","text":"RasterStack(x::AbstractSatellite, layers=bands(T); kwargs...)\n\nRead multiple layers into a Rasters.RasterStack.\n\nParameters\n\nx: An AbstractSatellite from which to read a layer.\nlayer: The layer to be read. See layers(s) for a list of available layers for sensor s.\nkwargs: Refer to the Rasters.RasterStack documentation for a summary of supported keywords.\n\n\n\n\n\n","category":"type"},{"location":"#Layer-Sources","page":"Home","title":"Layer Sources","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A sensor's layers can come form a variety of sources, including single-band rasters, multiband rasters, and bit-fields. However, we do not want to expose these particulars to the end user. Thus, we rely on several Julia types to represent this abstraction. Each of these types are sub-types of AbstractLayerSource and store the necessary information to retrieve the corresponding layer.","category":"page"},{"location":"","page":"Home","title":"Home","text":"AbstractLayerSource\nFile\nBand\nMaskValue\nBitField\nlayer_source","category":"page"},{"location":"#SatelliteDataSources.AbstractLayerSource","page":"Home","title":"SatelliteDataSources.AbstractLayerSource","text":"Super type of all layer sources.\n\n\n\n\n\n","category":"type"},{"location":"#SatelliteDataSources.File","page":"Home","title":"SatelliteDataSources.File","text":"A layer corresponding to a file.  \n\nCommonly used for sensors which store their bands as individual rasters.\n\n\n\n\n\n","category":"type"},{"location":"#SatelliteDataSources.Band","page":"Home","title":"SatelliteDataSources.Band","text":"A layer corresponding to a particular band in a multi-band file.  \n\nCommonly used for sensors which store their bands in a single multi-band raster.\n\n\n\n\n\n","category":"type"},{"location":"#SatelliteDataSources.MaskValue","page":"Home","title":"SatelliteDataSources.MaskValue","text":"A layer corresponding to a specific value in a single-band file.  \n\nSentinel 2 uses this format to encode segmentation masks in the SCL file.\n\n\n\n\n\n","category":"type"},{"location":"#SatelliteDataSources.BitField","page":"Home","title":"SatelliteDataSources.BitField","text":"A layer corresponding to a particular bit in a single-band file.  \n\nLandsat uses this format to encode segmentation masks within the QA file.\n\n\n\n\n\n","category":"type"},{"location":"#SatelliteDataSources.layer_source","page":"Home","title":"SatelliteDataSources.layer_source","text":"layer_source(::Type{AbstractSatellite}, layer::Symbol)\n\nRetrieve the AbstractLayerSource for the given layer and sensor type.\n\n\n\n\n\n","category":"function"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Rasters, SatelliteDataSources, DataDeps, Fetch\n\n# Download Landsat 8 Scene From Google Drive\nlandsat_link = \"https://drive.google.com/file/d/1S5H_oyWZZInOzJK4glBCr6LgXSADzhOV/view?usp=sharing\"\nlandsat_hash = \"2ce24abc359d30320213237d78101d193cdb8433ce21d1f7e9f08ca140cf5785\"\nregister(\n    DataDep(\n        \"LC08_L2SP_043024_20200802_20200914_02_T1\", \n        \"Landsat 8 Test Data\", \n        landsat_link, \n        landsat_hash, \n        fetch_method=gdownload, \n        post_fetch_method=unpack\n    )\n)\n\n# Place Scene in a Landsat8 Context\nsrc = Landsat8(datadep\"LC08_L2SP_043024_20200802_20200914_02_T1\")\n\n# Load the Blue, Green, Red, and NIR Bands\nstack = RasterStack(src, [:blue, :green, :red, :nir], lazy=true)\n\n# Mask Clouds and Cloud Shadow\ncloud_mask = Raster(src, :clouds) \nshadow_mask = Raster(src, :cloud_shadow) \nraster_mask = .!(boolmask(cloud_mask) .|| boolmask(shadow_mask))\nmasked_stack = mask(stack, with=raster_mask)\n\n# Save Processed Data as a Multiband Raster\nmasked_raster = Raster(masked_stack)\nwrite(\"masked_bands.tif\", masked_raster)","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
